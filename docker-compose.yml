services:
  db:
    image: postgres:15
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: image_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "mkdir -p /app/media/images &&
             chmod 755 /app/media/images &&
             cd django_app &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./media:/app/media  # ГАРАНТИРОВАННОЕ МОНТИРОВАНИЕ
      - ./static:/app/static
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      SECRET_KEY: your-super-secret-django-key-change-this-in-production
      DEBUG: "True"
      DB_NAME: image_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/app/static
      - ./media:/app/media  # ТАКОЕ ЖЕ МОНТИРОВАНИЕ
    depends_on:
      - web
    restart: unless-stopped
